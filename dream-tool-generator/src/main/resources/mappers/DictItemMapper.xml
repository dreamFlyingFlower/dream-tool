<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${common.pathPackage}.mapper.DictItemMapper">
  <resultMap id="BaseResultMap" type="$common.pathPackageModel.DictItem">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="dict_code" jdbcType="VARCHAR" property="dictCode" />
    <result column="dict_value" jdbcType="VARCHAR" property="dictValue" />
    <result column="dict_name" jdbcType="VARCHAR" property="dictName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="BIGINT" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="BIGINT" property="updateUser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" parameterType="$common.pathPackageModel.DictItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_dict_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_dict_item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ts_dict_item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="$common.pathPackageModel.DictItemExample">
    delete from ts_dict_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="$common.pathPackageModel.DictItem">
    insert into ts_dict_item (id, dict_code, dict_value, 
      dict_name, create_time, create_user, 
      update_time, update_user)
    values (#{id,jdbcType=BIGINT}, #{dictCode,jdbcType=VARCHAR}, #{dictValue,jdbcType=VARCHAR}, 
      #{dictName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="$common.pathPackageModel.DictItem">
    insert into ts_dict_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dictCode != null">
        dict_code,
      </if>
      <if test="dictValue != null">
        dict_value,
      </if>
      <if test="dictName != null">
        dict_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="dictCode != null">
        #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictName != null">
        #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="$common.pathPackageModel.DictItemExample" resultType="java.lang.Long">
    select count(*) from ts_dict_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_dict_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.dictCode != null">
        dict_code = #{record.dictCode,jdbcType=VARCHAR},
      </if>
      <if test="record.dictValue != null">
        dict_value = #{record.dictValue,jdbcType=VARCHAR},
      </if>
      <if test="record.dictName != null">
        dict_name = #{record.dictName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_dict_item
    set id = #{record.id,jdbcType=BIGINT},
      dict_code = #{record.dictCode,jdbcType=VARCHAR},
      dict_value = #{record.dictValue,jdbcType=VARCHAR},
      dict_name = #{record.dictName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user = #{record.createUser,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="$common.pathPackageModel.DictItem">
    update ts_dict_item
    <set>
      <if test="dictCode != null">
        dict_code = #{dictCode,jdbcType=VARCHAR},
      </if>
      <if test="dictValue != null">
        dict_value = #{dictValue,jdbcType=VARCHAR},
      </if>
      <if test="dictName != null">
        dict_name = #{dictName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="$common.pathPackageModel.DictItem">
    update ts_dict_item
    set dict_code = #{dictCode,jdbcType=VARCHAR},
      dict_value = #{dictValue,jdbcType=VARCHAR},
      dict_name = #{dictName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Base_Column_List">
    m.id, m.dict_code, m.dict_value, m.dict_name, m.create_time, m.create_user, m.update_time, m.update_user
  </sql>
  <insert id="inserts" parameterType="list">
    insert into ts_dict_item (id,dict_code,dict_value,dict_name,create_time,create_user,update_time,update_user)  values <foreach collection="list" item="item" index="index" separator=",">(#{item.id,jdbcType=BIGINT},#{item.dictCode,jdbcType=VARCHAR},#{item.dictValue,jdbcType=VARCHAR},#{item.dictName,jdbcType=VARCHAR},<choose><when test="item.createTime!= null">create_time = #{item.createTime,jdbcType=TIMESTAMP},</when><otherwise>CURRENT_TIMESTAMP,</otherwise></choose>#{item.createUser,jdbcType=BIGINT},#{item.updateTime,jdbcType=TIMESTAMP},#{item.updateUser,jdbcType=BIGINT})</foreach>
  </insert>
  <delete id="deleteByPrimaryKeys" parameterType="list">
    delete from  ts_dict_item where id in <foreach open="(" close=")" collection="list" item="id" separator=",">#{id,jdbcType=BIGINT}</foreach>
  </delete>
  <delete id="deleteAll">
    truncate table  ts_dict_item 
  </delete>
  <select id="selectEntitys" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from ts_dict_item<where><if test = "id != null "> and id = #{id,jdbcType=BIGINT} </if><if test = "dictCode != null "> and dict_code = #{dictCode,jdbcType=VARCHAR} </if><if test = "dictValue != null "> and dict_value = #{dictValue,jdbcType=VARCHAR} </if><if test = "dictName != null "> and dict_name = #{dictName,jdbcType=VARCHAR} </if><if test = "createTime != null "> and create_time = #{createTime,jdbcType=TIMESTAMP} </if><if test = "createUser != null "> and create_user = #{createUser,jdbcType=BIGINT} </if><if test = "updateTime != null "> and update_time = #{updateTime,jdbcType=TIMESTAMP} </if><if test = "updateUser != null "> and update_user = #{updateUser,jdbcType=BIGINT} </if></where>
  </select>
  <select id="selectLists" resultType="map">
    select <include refid="Base_Column_List" /> from ts_dict_item<where><if test = "id != null "> and id = #{id,jdbcType=BIGINT} </if><if test = "dictCode != null "> and dict_code = #{dictCode,jdbcType=VARCHAR} </if><if test = "dictValue != null "> and dict_value = #{dictValue,jdbcType=VARCHAR} </if><if test = "dictName != null "> and dict_name = #{dictName,jdbcType=VARCHAR} </if><if test = "createTime != null "> and create_time = #{createTime,jdbcType=TIMESTAMP} </if><if test = "createUser != null "> and create_user = #{createUser,jdbcType=BIGINT} </if><if test = "updateTime != null "> and update_time = #{updateTime,jdbcType=TIMESTAMP} </if><if test = "updateUser != null "> and update_user = #{updateUser,jdbcType=BIGINT} </if></where>
  </select>
  <select id="countByEntity" resultType="java.lang.Long">
    select count(*) from ts_dict_item<where><if test = "id != null ">and id = #{id,jdbcType=BIGINT} </if><if test = "dictCode != null ">and dict_code = #{dictCode,jdbcType=VARCHAR} </if><if test = "dictValue != null ">and dict_value = #{dictValue,jdbcType=VARCHAR} </if><if test = "dictName != null ">and dict_name = #{dictName,jdbcType=VARCHAR} </if><if test = "createTime != null ">and create_time = #{createTime,jdbcType=TIMESTAMP} </if><if test = "createUser != null ">and create_user = #{createUser,jdbcType=BIGINT} </if><if test = "updateTime != null ">and update_time = #{updateTime,jdbcType=TIMESTAMP} </if><if test = "updateUser != null ">and update_user = #{updateUser,jdbcType=BIGINT} </if></where>
  </select>
  <select id="selectMaxValue" resultType="java.lang.Long">
    select <choose><when test="'id' == _parameter.column">max(id)</when><when test="'createUser' == _parameter.column">max(create_user)</when><when test="'updateUser' == _parameter.column">max(update_user)</when><otherwise>max(0)</otherwise>  </choose>  from ts_dict_item
  </select>
  <select id="selectMaxTime" resultType="java.util.Date">
    select <choose><when test="createTime == ${column}">max(createTime)</when><when test="updateTime == ${column}">max(updateTime)</when><otherwise>1970-01-01 00:00:00</otherwise>  </choose>  from ts_dict_item
  </select>
</mapper>